// Mocks generated by Mockito 5.4.4 from annotations
// in doormer/test/src/features/chat/domain/usecases/archieve_chat_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:doormer/src/features/chat/domain/entities/contact_entity.dart'
    as _i4;
import 'package:doormer/src/features/chat/domain/repositories/contact_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockContactRepository extends _i1.Mock implements _i2.ContactRepository {
  MockContactRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Contact>> getActiveChatList() => (super.noSuchMethod(
        Invocation.method(
          #getActiveChatList,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Contact>>.value(<_i4.Contact>[]),
      ) as _i3.Future<List<_i4.Contact>>);

  @override
  _i3.Future<List<_i4.Contact>> getArchivedChatList() => (super.noSuchMethod(
        Invocation.method(
          #getArchivedChatList,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Contact>>.value(<_i4.Contact>[]),
      ) as _i3.Future<List<_i4.Contact>>);

  @override
  _i3.Future<void> updateChat(_i4.Contact? contact) => (super.noSuchMethod(
        Invocation.method(
          #updateChat,
          [contact],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteChat(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #deleteChat,
          [chatId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
